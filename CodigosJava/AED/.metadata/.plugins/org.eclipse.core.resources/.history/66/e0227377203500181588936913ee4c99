package Hash;

/*
 * 
 * https://introcs.cs.princeton.edu/java/23recursion/
 * 
 * */

public class Recorrencia {

	public static long factorial(long n) {
		if (n == 0) 
			return 1;

		else {
			return n * factorial(n-1);
		}
	}

	public static int factorialIterative(int n) {

		int resultado = 1;
		for(int i = n;i > 0; i--){
			resultado = resultado * i;	
		}

		return resultado;
	}


	static double exponenciacao(double a, int n) {
		double an;
		if (n == 0) {
			return 1; /* caso base */
		} else {
			double aux = exponenciacao(a, n / 2);
			System.out.println(aux);
			an = aux * aux;
			//System.out.println(an);
			if (n % 2 == 1) {
				an = an * a;
				//System.out.println(an);
			}
			return an;
		}
	}

	
	public static void tree(int n, double x, double y, double a, double branchRadius) {
        double bendAngle   = Math.toRadians(15);
        double branchAngle = Math.toRadians(37);
        double branchRatio = 0.65;

        double cx = x + Math.cos(a) * branchRadius;
        double cy = y + Math.sin(a) * branchRadius;
        StdDraw.setPenRadius(0.001 * Math.pow(n, 1.2));
        StdDraw.line(x, y, cx, cy);
        if (n == 0) return;

        tree(n-1, cx, cy, a + bendAngle - branchAngle, branchRadius * branchRatio);
        tree(n-1, cx, cy, a + bendAngle + branchAngle, branchRadius * branchRatio);
        tree(n-1, cx, cy, a + bendAngle,               branchRadius * (1 - branchRatio));
    }
	
	
	public static void main(String[] args) {
			/*
		int resultado = factorialIterative(5);
		System.out.println(resultado);*/
		
//		System.out.println(exponenciacao(2,3));
//		
//		System.out.println(1%2);
		 StdDraw.square(0.2, 0.8, 0.1);
	        StdDraw.filledSquare(0.8, 0.8, 0.2);
	        StdDraw.circle(0.8, 0.2, 0.2);

	        StdDraw.setPenColor(StdDraw.BOOK_RED);
	        StdDraw.setPenRadius(0.02);
	        StdDraw.arc(0.8, 0.2, 0.1, 200, 45);

	        // draw a blue diamond
	        StdDraw.setPenRadius();
	        StdDraw.setPenColor(StdDraw.BOOK_BLUE);
	        double[] x = { 0.1, 0.2, 0.3, 0.2 };
	        double[] y = { 0.2, 0.3, 0.2, 0.1 };
	        StdDraw.filledPolygon(x, y);

	        // text
	        StdDraw.setPenColor(StdDraw.BLACK);
	        StdDraw.text(0.2, 0.5, "black text");
	        StdDraw.setPenColor(StdDraw.WHITE);
	        StdDraw.text(0.8, 0.8, "white text");
		
	}
}
